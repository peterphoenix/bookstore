basePath: /
definitions:
  model.Book:
    properties:
      authors:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  model.CreateOrderItemReq:
    properties:
      book_id:
        type: string
      qty:
        type: integer
    type: object
  model.CreateOrderReq:
    properties:
      city:
        type: string
      country:
        type: string
      items:
        items:
          $ref: '#/definitions/model.CreateOrderItemReq'
        type: array
      shippingAddress:
        type: string
      state:
        type: string
      zipCode:
        type: string
    type: object
  model.CreateOrderRes:
    properties:
      id:
        type: string
    type: object
  model.GetOrderHistoryRes:
    properties:
      order_details:
        items:
          $ref: '#/definitions/model.OrderDetails'
        type: array
    type: object
  model.ListBooksRes:
    properties:
      books:
        items:
          $ref: '#/definitions/model.Book'
        type: array
    type: object
  model.OrderDetails:
    properties:
      created_at:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/model.OrderItemDetails'
        type: array
      status:
        type: string
      total:
        type: number
      user_id:
        type: string
    type: object
  model.OrderItemDetails:
    properties:
      book_id:
        type: string
      price:
        type: number
      qty:
        type: integer
    type: object
  model.UserCreateReq:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      email:
        type: string
      name:
        type: string
      pass:
        type: string
      phone_number:
        type: string
      state:
        type: string
      zip_code:
        type: string
    type: object
  model.UserCreateRes:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  respond.APIModel-model_CreateOrderRes:
    properties:
      data:
        $ref: '#/definitions/model.CreateOrderRes'
      errors:
        items:
          $ref: '#/definitions/respond.ErrorAPIModel'
        type: array
    type: object
  respond.APIModel-model_GetOrderHistoryRes:
    properties:
      data:
        $ref: '#/definitions/model.GetOrderHistoryRes'
      errors:
        items:
          $ref: '#/definitions/respond.ErrorAPIModel'
        type: array
    type: object
  respond.APIModel-model_ListBooksRes:
    properties:
      data:
        $ref: '#/definitions/model.ListBooksRes'
      errors:
        items:
          $ref: '#/definitions/respond.ErrorAPIModel'
        type: array
    type: object
  respond.APIModel-model_UserCreateRes:
    properties:
      data:
        $ref: '#/definitions/model.UserCreateRes'
      errors:
        items:
          $ref: '#/definitions/respond.ErrorAPIModel'
        type: array
    type: object
  respond.APIModel-string:
    properties:
      data:
        type: string
      errors:
        items:
          $ref: '#/definitions/respond.ErrorAPIModel'
        type: array
    type: object
  respond.ErrorAPIModel:
    properties:
      code:
        type: string
      message:
        type: string
      reqId:
        type: string
    type: object
host: localhost:9001
info:
  contact: {}
  description: Bookstore API Service
  title: Bookstore API
paths:
  /book:
    get:
      consumes:
      - application/json
      description: Endpoint used to get list of available books
      parameters:
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/respond.APIModel-model_ListBooksRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/respond.APIModel-string'
      summary: Get list books
      tags:
      - Book
  /order:
    post:
      consumes:
      - application/json
      description: Endpoint used to create order
      parameters:
      - description: X-User-ID
        in: header
        name: X-User-ID
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/respond.APIModel-model_CreateOrderRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/respond.APIModel-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/respond.APIModel-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/respond.APIModel-string'
      summary: Create order
      tags:
      - order
  /order/history:
    get:
      consumes:
      - application/json
      description: Endpoint used to get order history
      parameters:
      - description: X-User-ID
        in: header
        name: X-User-ID
        required: true
        type: string
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: 'start timestamp, format: 2006-01-01T00:00:00Z'
        in: query
        name: startTime
        type: string
      - description: 'end timestamp, format: 2006-01-01T00:00:00Z'
        in: query
        name: endTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/respond.APIModel-model_GetOrderHistoryRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/respond.APIModel-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/respond.APIModel-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/respond.APIModel-string'
      summary: Get order history
      tags:
      - order
  /user:
    post:
      consumes:
      - application/json
      description: Endpoint used to create new user
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/respond.APIModel-model_UserCreateRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/respond.APIModel-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/respond.APIModel-string'
      summary: Create new user
      tags:
      - User
swagger: "2.0"
